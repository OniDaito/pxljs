#ifdef DEPTH_VIEW_MATERIAL
uniform sampler2D uSamplerDepth;
uniform float uNearDepth;
uniform float uFarDepth;
#endif

#ifdef FRAGMENT_DEPTH_IN

float unpack (in vec4 colour) {
  const vec4 bitShifts = vec4(1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0); 
  return dot(colour, bitShifts);
}

// Passed in by the coffeegl depth shader. 
// Does not linearize as we dont know which camera to use
float readDepth(in vec2 coord, in sampler2D sampler)  {
  vec4 colour = texture2D(sampler, coord);
  return unpack(colour);
}

// linear depth converts depth values using the provided values
float linearDepth(float unpacked, float near, float far){
  return (near * unpacked) / ( far - unpacked * (far - near) );
}

#endif
