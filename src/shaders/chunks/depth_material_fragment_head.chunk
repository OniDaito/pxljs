#ifdef FRAGMENT_DEPTH_OUT
vec4 pack (float depth) {
  const vec4 bitSh = vec4(256 * 256 * 256, 256 * 256, 256, 1.0);
  const vec4 bitMsk = vec4(0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);
  vec4 comp = fract(depth * bitSh);
  comp -= comp.xxyz * bitMsk;
  return comp;
}

vec4 packDepth() { return pack(gl_FragCoord.z); }

// Returns the 3D position in eye space. 

vec3 positionFromDepth(float depth, vec2 texcoord) {
  vec4 position = vec4(texcoord, depth, 1.0);
  position.xyz = position.xyz*2.0 -1.0;
  position = uInverseProjectionMatrix*position;
  position.xyz /= position.w;
  return position.xyz;
}

#endif